name: '${APP_NAME}-${STAGE}'
services:
  node:
    build:
      context: .
      dockerfile: .docker/Dockerfile
      target: ${STAGE}
    restart: always
    env_file: .env.${STAGE}
    ports:
      - '${BACKEND_HOST_PORT}:${BACKEND_PORT}'
    depends_on:
      - postgres
    networks:
      - backend_network

  postgres:
    image: postgres:14.1-alpine
    hostname: ${POSTGRES_HOSTNAME}
    env_file: .env.${STAGE}
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-log:/var/log/postgresql/
    ports:
      - '${POSTGRES_HOST_PORT}:${POSTGRES_PORT}'
    networks:
      - backend_network

volumes:
  postgres-data:
    driver: local
    name: ${APP_NAME}-postgres-data-${STAGE}
  postgres-log:
    driver: local
    name: ${APP_NAME}-postgres-log-${STAGE}

networks:
  backend_network:
    driver: bridge
    name: ${APP_NAME}-backend-network-${STAGE}
